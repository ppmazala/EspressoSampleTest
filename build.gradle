// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.11'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1"


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC6-3"
    id "org.sonarqube" version "2.6"

}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply plugin: 'org.sonarqube'
apply plugin: "io.gitlab.arturbosch.detekt"


detekt {
    version = "1.0.0.RC6-3"
    profile("main") {
        input = "./app/src/main/java"
        config = "./default-detekt-config.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

task kotlinLintCheck(dependsOn: ['detektCheck']) {
    group 'verification'
}

sonarqube {
    properties {
        property "sonar.host.url", "http://p-sonarqube.nl.eu.abnamro.com:9000"
        property "sonar.projectName", "Android - Reference App"
        property "sonar.projectKey", "com.abnamro.apps.referenceandroid:referenceandroid"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.description", "Reference Android App"
        property "sonar.report.export.path", "sonar-report.json"
        property "sonar.projectVersion","1.0.0"

//        when debugging use the q server
//        property "sonar.host.url", "http://q-sonarqube.nl.eu.abnamro.com:9000"
//        property "sonar.login","[DONOTCOMMIT]"
//        property "sonar.password","[DONOTCOMMIT]"

        property "detekt.sonar.kotlin.config.path","support/default-detekt-config.yml"
        property "sonar.findbugs.excludesFilters","../support/findbugs-filter.xml"

//        for coverage report
//        property "sonar.java.coveragePlugin", "jacoco"
//        property "sonar.jacoco.reportPaths","app/build/jacoco/testDevelopDebugUnitTest.exec"
    }
}

